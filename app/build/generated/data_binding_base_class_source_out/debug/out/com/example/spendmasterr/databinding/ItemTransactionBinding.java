// Generated by view binder compiler. Do not edit!
package com.example.spendmasterr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spendmasterr.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTransactionBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton btnDelete;

  @NonNull
  public final ImageButton btnEdit;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View viewTypeIndicator;

  private ItemTransactionBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton btnDelete,
      @NonNull ImageButton btnEdit, @NonNull TextView tvAmount, @NonNull TextView tvCategory,
      @NonNull TextView tvDate, @NonNull TextView tvTitle, @NonNull View viewTypeIndicator) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.tvAmount = tvAmount;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvTitle = tvTitle;
    this.viewTypeIndicator = viewTypeIndicator;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      ImageButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      ImageButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.tvAmount;
      TextView tvAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.viewTypeIndicator;
      View viewTypeIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewTypeIndicator == null) {
        break missingId;
      }

      return new ItemTransactionBinding((MaterialCardView) rootView, btnDelete, btnEdit, tvAmount,
          tvCategory, tvDate, tvTitle, viewTypeIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
