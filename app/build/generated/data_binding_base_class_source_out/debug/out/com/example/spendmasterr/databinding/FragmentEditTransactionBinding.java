// Generated by view binder compiler. Do not edit!
package com.example.spendmasterr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spendmasterr.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditTransactionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final TextInputEditText editTextAmount;

  @NonNull
  public final TextInputEditText editTextTitle;

  @NonNull
  public final RadioButton radioExpense;

  @NonNull
  public final RadioGroup radioGroupType;

  @NonNull
  public final RadioButton radioIncome;

  @NonNull
  public final Spinner spinnerCategory;

  @NonNull
  public final TextInputLayout textInputLayoutAmount;

  @NonNull
  public final TextInputLayout textInputLayoutTitle;

  @NonNull
  public final TextView textViewCategory;

  @NonNull
  public final TextView textViewType;

  private FragmentEditTransactionBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonCancel, @NonNull MaterialButton buttonSave,
      @NonNull TextInputEditText editTextAmount, @NonNull TextInputEditText editTextTitle,
      @NonNull RadioButton radioExpense, @NonNull RadioGroup radioGroupType,
      @NonNull RadioButton radioIncome, @NonNull Spinner spinnerCategory,
      @NonNull TextInputLayout textInputLayoutAmount, @NonNull TextInputLayout textInputLayoutTitle,
      @NonNull TextView textViewCategory, @NonNull TextView textViewType) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.editTextAmount = editTextAmount;
    this.editTextTitle = editTextTitle;
    this.radioExpense = radioExpense;
    this.radioGroupType = radioGroupType;
    this.radioIncome = radioIncome;
    this.spinnerCategory = spinnerCategory;
    this.textInputLayoutAmount = textInputLayoutAmount;
    this.textInputLayoutTitle = textInputLayoutTitle;
    this.textViewCategory = textViewCategory;
    this.textViewType = textViewType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.editTextAmount;
      TextInputEditText editTextAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      TextInputEditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.radioExpense;
      RadioButton radioExpense = ViewBindings.findChildViewById(rootView, id);
      if (radioExpense == null) {
        break missingId;
      }

      id = R.id.radioGroupType;
      RadioGroup radioGroupType = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupType == null) {
        break missingId;
      }

      id = R.id.radioIncome;
      RadioButton radioIncome = ViewBindings.findChildViewById(rootView, id);
      if (radioIncome == null) {
        break missingId;
      }

      id = R.id.spinnerCategory;
      Spinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAmount;
      TextInputLayout textInputLayoutAmount = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutAmount == null) {
        break missingId;
      }

      id = R.id.textInputLayoutTitle;
      TextInputLayout textInputLayoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutTitle == null) {
        break missingId;
      }

      id = R.id.textViewCategory;
      TextView textViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategory == null) {
        break missingId;
      }

      id = R.id.textViewType;
      TextView textViewType = ViewBindings.findChildViewById(rootView, id);
      if (textViewType == null) {
        break missingId;
      }

      return new FragmentEditTransactionBinding((ConstraintLayout) rootView, buttonCancel,
          buttonSave, editTextAmount, editTextTitle, radioExpense, radioGroupType, radioIncome,
          spinnerCategory, textInputLayoutAmount, textInputLayoutTitle, textViewCategory,
          textViewType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
